import yaml

from marker_tools import EXPRESSIONS

OR_SEPARATOR = '|'
PAIR_SEPARATOR = ' ; '


def get_synonyms_from_taxonomy(node):
    """
    Returns synonyms string generated by concatenating the content of the following fields with each value separated
    by |: cell_set_preferred_alias, original_label, cell_set_label, cell_set_aligned_alias, cell_set_additional_alias
    Args:
        node: Dendrogram node to get synonyms

    Returns: name synonyms string concatenated by "|"

    """
    synonym_properties = ['cell_set_preferred_alias', 'original_label', 'cell_set_label', 'cell_set_aligned_alias',
                          'cell_set_additional_aliases']

    return OR_SEPARATOR.join({node[prop] for prop in synonym_properties if prop in node.keys() and node[prop]})


def get_synonym_pairs(node):
    """
    Returns the synonym key-value paris in the form {key} : {value} sep=" ; ".
    Fields: cell_set_preferred_alias, original_label, cell_set_label, cell_set_aligned_alias, cell_set_additional_alias
    Args:
        node:

    Returns:

    """
    synonym_properties = ['cell_set_preferred_alias', 'original_label', 'cell_set_label', 'cell_set_aligned_alias',
                          'cell_set_additional_aliases']
    values = []
    for prop in synonym_properties:
        if prop in node.keys():
            pair_str = prop + ":"
            pair_str += node[prop] if node[prop] else "''"
            values.append(pair_str)
    return PAIR_SEPARATOR.join(values)


def read_taxonomy_details_yaml():
    with open(r'../dendrograms/taxonomy_details.yaml') as file:
        documents = yaml.full_load(file)
    return documents


def get_max_marker_count(marker_expressions):
    """
    Returns the maximum number of markers in the given marker definition
    Args:
        marker_expressions: marker file content

    Returns: the maximum number of markers in the given marker definition

    """
    max_count = 0
    for term in marker_expressions.keys():
        expression_count = len(marker_expressions.get(term)[EXPRESSIONS])
        if expression_count > max_count:
            max_count = expression_count

    return max_count
